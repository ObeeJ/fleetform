syntax = "proto3";

package tfplugin6;

service Provider {
  rpc GetSchema(GetProviderSchema.Request) returns (GetProviderSchema.Response);
  rpc ValidateProviderConfig(ValidateProviderConfig.Request) returns (ValidateProviderConfig.Response);
  rpc ConfigureProvider(ConfigureProvider.Request) returns (ConfigureProvider.Response);
}

message GetProviderSchema {
  message Request {}
  message Response {
    Schema provider = 1;
    map<string, Schema> resource_schemas = 2;
    map<string, Schema> data_source_schemas = 3;
    string provider_meta = 4;
    Diagnostics diagnostics = 5;
  }
}

message ValidateProviderConfig {
  message Request {
    DynamicValue config = 1;
  }
  message Response {
    Diagnostics diagnostics = 1;
  }
}

message ConfigureProvider {
  message Request {
    DynamicValue config = 1;
  }
  message Response {
    Diagnostics diagnostics = 1;
  }
}

message Schema {
  string version = 1;
  Block block = 2;
}

message Block {
  repeated Attribute attributes = 1;
  repeated NestedBlock block_types = 2;
}

message Attribute {
  string name = 1;
  string type = 2;
  bool required = 3;
  bool computed = 4;
  string description = 5;
}

message NestedBlock {
  string type_name = 1;
  Block block = 2;
  NestingMode nesting = 3;
}

enum NestingMode {
  INVALID = 0;
  SINGLE = 1;
  LIST = 2;
  SET = 3;
  MAP = 4;
  GROUP = 5;
}

message DynamicValue {
  bytes msgpack = 1;
  bytes json = 2;
}

message Diagnostics {
  repeated Diagnostic diagnostics = 1;
}

message Diagnostic {
  Severity severity = 1;
  string summary = 2;
  string detail = 3;
}

enum Severity {
  SEVERITY_INVALID = 0;
  ERROR = 1;
  WARNING = 2;
}
